{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\GitHub\\\\3SAT_Instance_Generator\\\\src\\\\components\\\\UserSection\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from \"react-router-dom\";\nimport { generatorAddress, requestAccount } from '../../App.js';\nimport { ethers } from 'ethers';\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\nimport './messagesInfo.css';\nimport { buildInstance, buildDateArray } from './supportFunctions';\nimport swal from 'sweetalert';\nimport { secureStorage } from 'components/secureSession';\nimport { Container, FormButton, FormButtonTop, Form, FormH1, FormWrap1, FormWrap2 } from './UserElements';\nimport { FormLabel, FormInput, FormError } from '../FormElements';\nimport logo from '../../images/chainlink.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserSection = () => {\n  _s();\n  var _errors$p_value, _errors$p_value2, _errors$p_value3, _errors$p_value4, _errors$q_value, _errors$q_value2, _errors$q_value3, _errors$q_value4, _errors$numInstances, _errors$numInstances2, _errors$numInstances3, _errors$numInstances4, _errors2$orcid, _errors2$orcid2, _errors2$orcid3, _errors2$orcid4;\n  var infoArray = [];\n  var currentRandomNumber = null;\n  var oldRandomNumber = null;\n  let history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    register: register2,\n    reset: reset2,\n    handleSubmit: handleSubmit2,\n    formState: {\n      errors: errors2\n    }\n  } = useForm();\n  useEffect(() => {\n    // Check whether user entered the password before, if not, go back to /signin page\n    if (!secureStorage.getItem('password')) {\n      secureStorage.removeItem(\"password\");\n      secureStorage.removeItem(\"currOrcid\");\n      sessionStorage.setItem(\"noPassword\", true);\n      history.push(\"/signin\");\n    }\n  }, [history]);\n  useEffect(() => {\n    secureStorage.removeItem(\"currOrcid\");\n  }, []);\n\n  /*\r\n  * Function to check if the user wnats to use A or B generator\r\n  */\n  async function myHandleSubmit(data, event) {\n    var _event$nativeEvent$su, _event$nativeEvent$su2;\n    if (((_event$nativeEvent$su = event.nativeEvent.submitter) === null || _event$nativeEvent$su === void 0 ? void 0 : _event$nativeEvent$su.id) === \"submit1\") async_createAInstance(data);else if (((_event$nativeEvent$su2 = event.nativeEvent.submitter) === null || _event$nativeEvent$su2 === void 0 ? void 0 : _event$nativeEvent$su2.id) === \"submit2\") async_createBInstance(data);\n  }\n\n  /*\r\n  * This function executes the function to generate a new instance using A generator\r\n  */\n  async function async_createAInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      try {\n        const transaction = await contract.createAInstance(data.p_value, data.q_value, secureStorage.getItem('password'), data.numInstances, {\n          gasLimit: 30000000\n        });\n        await transaction.wait();\n      } catch (e) {\n        alert(\"Gas Limit Error: please, consider decreasing the value of some of the parameters used to generate the instances. We use a gas limit of 30 million units. Refer to your MetaMask wallet, select the 'Activity' tab, click on the failed transaction and look at the 'Gas Used' field. This will help you verify the gas you are using in each transaction.\");\n      }\n    }\n  }\n\n  /*\r\n  * This function executes the function to generate a new instance using B generator\r\n  */\n  async function async_createBInstance(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      try {\n        const transaction = await contract.createBInstance(data.p_value, data.q_value, secureStorage.getItem('password'), data.numInstances, {\n          gasLimit: 30000000\n        });\n        await transaction.wait();\n      } catch (e) {\n        alert(\"Gas Limit Error: please, consider decreasing the value of some of the parameters used to generate the instances. We use a gas limit of 30 million units. Refer to your MetaMask wallet, select the 'Activity' tab, click on the failed transaction and look at the 'Gas Used' field. This will help you verify the gas you are using in each transaction.\");\n      }\n    }\n  }\n\n  /*\r\n  * Get all instances from smart contract filtered by orcid\r\n  */\n  async function async_getAllInstances(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getAllInstances(data.orcid);\n        infoArray = buildInstance(result);\n        secureStorage.setItem(\"currOrcid\", data.orcid);\n        history.push({\n          pathname: '/instances',\n          state: {\n            infoArray\n          }\n        });\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  /*\r\n  * VRF function to request the random number\r\n  */\n  async function async_getRandomNumber(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\n      try {\n        const transaction = await contract.getRandomNumber(secureStorage.getItem('password'));\n        await transaction.wait();\n      } catch (e) {\n        alert(\"Not enough LINK in the smart contract. Please contact the admin.\");\n      }\n    }\n  }\n\n  /*\r\n  * Asks to the contract if there is enough LINK to call the oracles\r\n  */\n  async function async_getRemainingLINK(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getRemainingLINK();\n        console.log(\"Smart contract balance is: \" + result / 10e17 + \" LINK token\");\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  /*\r\n  * Function to check the moment when the random number has been generated\r\n  */\n  async function async_randomResult(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n      try {\n        const signer = provider.getSigner();\n        let isCanceled = false;\n        oldRandomNumber = currentRandomNumber;\n        if (parseInt(currentRandomNumber, 16) === parseInt(oldRandomNumber, 16) && currentRandomNumber !== null && currentRandomNumber != 0) swal(\"Wait!\", \"You have not yet used the current number\", \"info\");\n        while (!isCanceled) {\n          currentRandomNumber = await contract.connect(signer).randomResult();\n          if (parseInt(currentRandomNumber, 16) !== parseInt(oldRandomNumber, 16) && oldRandomNumber !== null) {\n            isCanceled = true;\n            swal(\"Good job!\", \"Your new random number is available\", \"success\");\n          } else {\n            oldRandomNumber = currentRandomNumber;\n          }\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        }\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  /*\r\n  * Get the array which contains all the dates for the random numbers generated from the SC\r\n  */\n  async function async_getDateNumber(data) {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\n      try {\n        const signer = provider.getSigner();\n        const result = await contract.connect(signer).getDateNumber(secureStorage.getItem('password'));\n        console.log(buildDateArray(result));\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(FormWrap1, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(myHandleSubmit),\n        children: [/*#__PURE__*/_jsxDEV(FormH1, {\n          children: \"Create a new instance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: logo,\n          alt: \"logo\",\n          onClick: () => {\n            async_getRandomNumber();\n            async_getRemainingLINK();\n            async_randomResult();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"field-tip\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"First parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tip-content\",\n            children: \"The \\\"p\\\" value indicates the probability of generating a new proposition symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          ...register(\"p_value\", {\n            required: true,\n            max: 99,\n            min: 1,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"p_value\",\n          placeholder: \"p value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value = errors.p_value) === null || _errors$p_value === void 0 ? void 0 : _errors$p_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 52\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value2 = errors.p_value) === null || _errors$p_value2 === void 0 ? void 0 : _errors$p_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 47\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value3 = errors.p_value) === null || _errors$p_value3 === void 0 ? void 0 : _errors$p_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 47\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$p_value4 = errors.p_value) === null || _errors$p_value4 === void 0 ? void 0 : _errors$p_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"field-tip\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Second parameter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tip-content\",\n            children: \"The \\\"q\\\" value indicates the probability of generating a new clause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          ...register(\"q_value\", {\n            required: true,\n            max: 99,\n            min: 1,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"q_value\",\n          placeholder: \"q value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value = errors.q_value) === null || _errors$q_value === void 0 ? void 0 : _errors$q_value.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 52\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value2 = errors.q_value) === null || _errors$q_value2 === void 0 ? void 0 : _errors$q_value2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 47\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value3 = errors.q_value) === null || _errors$q_value3 === void 0 ? void 0 : _errors$q_value3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 99]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 47\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$q_value4 = errors.q_value) === null || _errors$q_value4 === void 0 ? void 0 : _errors$q_value4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"field-tip\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Number of instances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tip-content\",\n            children: \"Enter the number of instances you would like to generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          ...register(\"numInstances\", {\n            required: true,\n            max: 5,\n            min: 1,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"numInstances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances = errors.numInstances) === null || _errors$numInstances === void 0 ? void 0 : _errors$numInstances.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 57\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances2 = errors.numInstances) === null || _errors$numInstances2 === void 0 ? void 0 : _errors$numInstances2.type) === \"max\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 5]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 52\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances3 = errors.numInstances) === null || _errors$numInstances3 === void 0 ? void 0 : _errors$numInstances3.type) === \"min\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Integer number between [1, 5]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 52\n        }, this), (errors === null || errors === void 0 ? void 0 : (_errors$numInstances4 = errors.numInstances) === null || _errors$numInstances4 === void 0 ? void 0 : _errors$numInstances4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 56\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormButtonTop, {\n            left: true,\n            id: \"submit1\",\n            type: \"submit\",\n            value: \"A generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormButtonTop, {\n            right: true,\n            id: \"submit2\",\n            type: \"submit\",\n            value: \"B generator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormWrap2, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit2(async_getAllInstances),\n        children: [/*#__PURE__*/_jsxDEV(FormH1, {\n          children: \"Search for instances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"ORCID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          ...register2(\"orcid\", {\n            required: true,\n            minLength: 16,\n            maxLength: 16,\n            pattern: /^[0-9\\b]+$/\n          }),\n          type: \"number\",\n          name: \"orcid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid = errors2.orcid) === null || _errors2$orcid === void 0 ? void 0 : _errors2$orcid.type) === \"required\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Field required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 51\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid2 = errors2.orcid) === null || _errors2$orcid2 === void 0 ? void 0 : _errors2$orcid2.type) === \"minLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"It must be a number of 16 digits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 52\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid3 = errors2.orcid) === null || _errors2$orcid3 === void 0 ? void 0 : _errors2$orcid3.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"It must be a number of 16 digits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 52\n        }, this), (errors2 === null || errors2 === void 0 ? void 0 : (_errors2$orcid4 = errors2.orcid) === null || _errors2$orcid4 === void 0 ? void 0 : _errors2$orcid4.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(FormError, {\n          children: \"Numerical characters only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n          type: \"submit\",\n          value: \"Get instances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, 2, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(UserSection, \"AIt1tcgrGTEMSAKu7cp8m3s1SDg=\", false, function () {\n  return [useHistory, useForm, useForm];\n});\n_c = UserSection;\nexport default UserSection;\nvar _c;\n$RefreshReg$(_c, \"UserSection\");","map":{"version":3,"names":["React","useState","useEffect","useForm","useHistory","generatorAddress","requestAccount","ethers","Generator","buildInstance","buildDateArray","swal","secureStorage","Container","FormButton","FormButtonTop","Form","FormH1","FormWrap1","FormWrap2","FormLabel","FormInput","FormError","logo","UserSection","infoArray","currentRandomNumber","oldRandomNumber","history","register","handleSubmit","reset","formState","errors","register2","reset2","handleSubmit2","errors2","getItem","removeItem","sessionStorage","setItem","push","myHandleSubmit","data","event","nativeEvent","submitter","id","async_createAInstance","async_createBInstance","window","ethereum","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","transaction","createAInstance","p_value","q_value","numInstances","gasLimit","wait","e","alert","createBInstance","async_getAllInstances","result","connect","getAllInstances","orcid","pathname","state","err","console","log","async_getRandomNumber","getRandomNumber","async_getRemainingLINK","getRemainingLINK","async_randomResult","isCanceled","parseInt","randomResult","Promise","resolve","setTimeout","async_getDateNumber","getDateNumber","required","max","min","pattern","type","minLength","maxLength"],"sources":["C:/Users/Jonathan/Documents/GitHub/3SAT_Instance_Generator/src/components/UserSection/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { generatorAddress, requestAccount } from '../../App.js';\r\nimport { ethers } from 'ethers';\r\nimport Generator from '../../artifacts/contracts/Generator.sol/Generator.json';\r\nimport './messagesInfo.css'\r\nimport { buildInstance, buildDateArray } from './supportFunctions'\r\nimport swal from 'sweetalert';\r\nimport { secureStorage } from 'components/secureSession';\r\nimport {\r\n  Container,\r\n  FormButton,\r\n  FormButtonTop,\r\n  Form,\r\n  FormH1,\r\n  FormWrap1,\r\n  FormWrap2,\r\n} from './UserElements'\r\nimport {\r\n  FormLabel,\r\n  FormInput,\r\n  FormError\r\n} from '../FormElements'\r\nimport logo from '../../images/chainlink.png';\r\n\r\nconst UserSection = () => {\r\n  var infoArray = [];\r\n  var currentRandomNumber = null;\r\n  var oldRandomNumber = null;\r\n  let history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors }\r\n  } = useForm();\r\n\r\n  const {\r\n    register: register2,\r\n    reset: reset2,\r\n    handleSubmit: handleSubmit2,\r\n    formState: { errors: errors2 }\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    // Check whether user entered the password before, if not, go back to /signin page\r\n    if (!secureStorage.getItem('password')) {\r\n      secureStorage.removeItem(\"password\");\r\n      secureStorage.removeItem(\"currOrcid\");\r\n      sessionStorage.setItem(\"noPassword\", true);\r\n      history.push(\"/signin\");\r\n    }\r\n  }, [history])\r\n\r\n  useEffect(() => {\r\n    secureStorage.removeItem(\"currOrcid\");\r\n  }, [])\r\n\r\n  /*\r\n  * Function to check if the user wnats to use A or B generator\r\n  */\r\n  async function myHandleSubmit(data, event) {\r\n    if (event.nativeEvent.submitter?.id === \"submit1\")\r\n      async_createAInstance(data);\r\n    else if (event.nativeEvent.submitter?.id === \"submit2\")\r\n      async_createBInstance(data);\r\n  }\r\n\r\n  /*\r\n  * This function executes the function to generate a new instance using A generator\r\n  */\r\n  async function async_createAInstance(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner()\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n      try {\r\n      const transaction = await contract.createAInstance(\r\n        data.p_value,\r\n        data.q_value,\r\n        secureStorage.getItem('password'),\r\n        data.numInstances,\r\n          { gasLimit: 30000000 })\r\n        await transaction.wait()\r\n      } catch (e) {\r\n        alert(\"Gas Limit Error: please, consider decreasing the value of some of the parameters used to generate the instances. We use a gas limit of 30 million units. Refer to your MetaMask wallet, select the 'Activity' tab, click on the failed transaction and look at the 'Gas Used' field. This will help you verify the gas you are using in each transaction.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  * This function executes the function to generate a new instance using B generator\r\n  */\r\n  async function async_createBInstance(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner()\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n      try {\r\n      const transaction = await contract.createBInstance(\r\n        data.p_value,\r\n        data.q_value,\r\n        secureStorage.getItem('password'),\r\n        data.numInstances,\r\n          { gasLimit: 30000000 })\r\n        await transaction.wait()\r\n      } catch (e) {\r\n        alert(\"Gas Limit Error: please, consider decreasing the value of some of the parameters used to generate the instances. We use a gas limit of 30 million units. Refer to your MetaMask wallet, select the 'Activity' tab, click on the failed transaction and look at the 'Gas Used' field. This will help you verify the gas you are using in each transaction.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Get all instances from smart contract filtered by orcid\r\n  */\r\n  async function async_getAllInstances(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        const result = await contract.connect(signer).getAllInstances(data.orcid);\r\n        infoArray = buildInstance(result);\r\n        secureStorage.setItem(\"currOrcid\", data.orcid)\r\n        history.push({\r\n          pathname: '/instances',\r\n          state: { infoArray }\r\n        });\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  * VRF function to request the random number\r\n  */\r\n  async function async_getRandomNumber(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner()\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, signer);\r\n      try {\r\n        const transaction = await contract.getRandomNumber(secureStorage.getItem('password'))\r\n        await transaction.wait();\r\n      } catch (e) {\r\n        alert(\"Not enough LINK in the smart contract. Please contact the admin.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Asks to the contract if there is enough LINK to call the oracles\r\n  */\r\n  async function async_getRemainingLINK(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount();\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        const result = await contract.connect(signer).getRemainingLINK();\r\n        console.log(\"Smart contract balance is: \" + (result / 10e17) + \" LINK token\");\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  * Function to check the moment when the random number has been generated\r\n  */\r\n  async function async_randomResult(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount();\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        let isCanceled = false;\r\n        oldRandomNumber = currentRandomNumber;\r\n        if (parseInt(currentRandomNumber, 16) === parseInt(oldRandomNumber, 16) && currentRandomNumber !== null && currentRandomNumber != 0)\r\n          swal(\"Wait!\", \"You have not yet used the current number\", \"info\");\r\n        while (!isCanceled) {\r\n          currentRandomNumber = await contract.connect(signer).randomResult();\r\n          if (parseInt(currentRandomNumber, 16) !== parseInt(oldRandomNumber, 16) && oldRandomNumber !== null) {\r\n            isCanceled = true;\r\n            swal(\"Good job!\", \"Your new random number is available\", \"success\");\r\n          } else {\r\n            oldRandomNumber = currentRandomNumber;\r\n          }\r\n          await new Promise(resolve => setTimeout(resolve, 2000));\r\n        }\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n  \r\n  /*\r\n  * Get the array which contains all the dates for the random numbers generated from the SC\r\n  */\r\n  async function async_getDateNumber(data) {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(generatorAddress, Generator.abi, provider);\r\n      try {\r\n        const signer = provider.getSigner();\r\n        const result = await contract.connect(signer).getDateNumber(secureStorage.getItem('password'));\r\n        console.log(buildDateArray(result));\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <FormWrap1>\r\n        <Form key={1} onSubmit={handleSubmit(myHandleSubmit)}>\r\n          <FormH1>Create a new instance</FormH1>\r\n          <img className=\"logo\" src={logo} alt='logo' onClick={() => { async_getRandomNumber(); async_getRemainingLINK(); async_randomResult(); }} />\r\n          <span className=\"field-tip\">\r\n            <FormLabel>First parameter</FormLabel>\r\n            <span className=\"tip-content\">The \"p\" value indicates the probability of generating a new proposition symbol</span>\r\n          </span>\r\n          <FormInput {...register(\"p_value\", {\r\n            required: true,\r\n            max: 99,\r\n            min: 1,\r\n            pattern: /^[0-9\\b]+$/\r\n          })} type=\"number\" name=\"p_value\" placeholder=\"p value\" />\r\n          {errors?.p_value?.type === \"required\" && <FormError>Field required</FormError>}\r\n          {errors?.p_value?.type === \"max\" && <FormError>Integer number between [1, 99]</FormError>}\r\n          {errors?.p_value?.type === \"min\" && <FormError>Integer number between [1, 99]</FormError>}\r\n          {errors?.p_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n          <span className=\"field-tip\">\r\n            <FormLabel>Second parameter</FormLabel>\r\n            <span className=\"tip-content\">The \"q\" value indicates the probability of generating a new clause</span>\r\n          </span>\r\n          <FormInput {...register(\"q_value\", {\r\n            required: true,\r\n            max: 99,\r\n            min: 1,\r\n            pattern: /^[0-9\\b]+$/\r\n          })} type=\"number\" name=\"q_value\" placeholder=\"q value\" />\r\n          {errors?.q_value?.type === \"required\" && <FormError>Field required</FormError>}\r\n          {errors?.q_value?.type === \"max\" && <FormError>Integer number between [1, 99]</FormError>}\r\n          {errors?.q_value?.type === \"min\" && <FormError>Integer number between [1, 99]</FormError>}\r\n          {errors?.q_value?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n          <span className=\"field-tip\">\r\n            <FormLabel>Number of instances</FormLabel>\r\n            <span className=\"tip-content\">Enter the number of instances you would like to generate</span>\r\n          </span>\r\n          <FormInput {...register(\"numInstances\", {\r\n            required: true,\r\n            max: 5,\r\n            min: 1,\r\n            pattern: /^[0-9\\b]+$/\r\n          })} type=\"number\" name=\"numInstances\" />\r\n          {errors?.numInstances?.type === \"required\" && <FormError>Field required</FormError>}\r\n          {errors?.numInstances?.type === \"max\" && <FormError>Integer number between [1, 5]</FormError>}\r\n          {errors?.numInstances?.type === \"min\" && <FormError>Integer number between [1, 5]</FormError>}\r\n          {errors?.numInstances?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n          <div>\r\n            { /* FormButtonTop has props(left or right) for controlling the 'float' attr  */}\r\n            <FormButtonTop left id=\"submit1\" type=\"submit\" value=\"A generator\" />\r\n            <FormButtonTop right id=\"submit2\" type=\"submit\" value=\"B generator\" />\r\n          </div>\r\n        </Form>\r\n      </FormWrap1>\r\n      <FormWrap2>\r\n        <Form key={2} onSubmit={handleSubmit2(async_getAllInstances)}>\r\n          <FormH1>Search for instances</FormH1>\r\n          <FormLabel>ORCID</FormLabel>\r\n          <FormInput {...register2(\"orcid\", {\r\n            required: true,\r\n            minLength: 16,\r\n            maxLength: 16,\r\n            pattern: /^[0-9\\b]+$/\r\n          })} type=\"number\" name=\"orcid\" />\r\n          {errors2?.orcid?.type === \"required\" && <FormError>Field required</FormError>}\r\n          {errors2?.orcid?.type === \"minLength\" && <FormError>It must be a number of 16 digits</FormError>}\r\n          {errors2?.orcid?.type === \"maxLength\" && <FormError>It must be a number of 16 digits</FormError>}\r\n          {errors2?.orcid?.type === \"pattern\" && <FormError>Numerical characters only</FormError>}\r\n          <FormButton type=\"submit\" value=\"Get instances\" />\r\n        </Form>\r\n      </FormWrap2>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UserSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}